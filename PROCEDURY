---PROCEDUR NR 1
------------------SPRZEDARZ TOWARU------------------
CREATE PROC sprzedaj_towar
@id_towar INT,
@ilosc INT,
@kasa INT
AS
IF @ilosc < 0
BEGIN
	RAISERROR('Nie moze sprzedac ujemnej ilosci towaru',1,1)
	ROLLBACK
END
INSERT INTO Zamowienia(ilosc, id_produkt, id_kasa, data_zamowienia)
VALUES (@ilosc, @id_towar, @kasa, getdate())
GO
---|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
---PROCEDURA NR 2
------------------procedura kupna towaru od dostawcow ------------------
CREATE PROCEDURE Zamowienie_towaru(@id_produkt INT ,@ilosc FLOAT)
AS
IF @ilosc < 0
BEGIN
	RAISERROR('Nie moze zamowic ujemnej ilosci towaru',1,1)
END
ELSE
BEGIN
UPDATE Produkty
SET [stan_magazyn(w kg)] = [stan_magazyn(w kg)] + @ilosc
WHERE id_produkt = @id_produkt
END
GO
---tu dodamy 2,5 litra zubrowki do magazynu ---
EXEC Zamowienie_towaru 1, -2.5
GO
---|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
----PROCEDUR NR 3
------------------PRZYZNANIE PREMI PRACOWNIKOWI------------------
CREATE PROC przyznaj_premie
@id_pracownik INT,
@id_premii INT
AS
UPDATE Wyplata
SET id_premia = @id_premii
WHERE id_pracownik = @id_pracownik AND MONTH(data_wyplaty) = MONTH(GETDATE())
GO
---|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
---PROCEDUR NR 4
------------------procedura dania urlopu danemu pracownikowi na x dni------------------
CREATE PROCEDURE Dodaj_urlop (@id_pracownik INT, @na_ile_dni INT)
AS
IF @na_ile_dni < 1
	RAISERROR('Nie mozna dac urlopu na 0 lub mniej dni',1,1)
ELSE 
BEGIN
DECLARE @doKiedy DATE
SET @doKiedy = (SELECT GETDATE() + @na_ile_dni)
INSERT INTO Urlopy VALUES (@id_pracownik,CAST(GETDATE() AS DATE),@doKiedy)
END
----dodamy urlop pracownikowi na 5 dni ----
EXEC Dodaj_urlop 1,5
---|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
---PROCEDURA NR 5
------------------sprzedarz danej usługi ------------------
CREATE PROCEDURE sprzedaj_usluge 
@id_stanowisko INT,
@ilosc INT,
@kasa INT
AS
IF @ilosc < 0
	RAISERROR('Nie moze zamowic ujemnej ilosci uslugi',1,1)
ELSE 
BEGIN
IF EXISTS (SELECT czy_wolne FROM StanowiskaUslug WHERE id_stanowisko=@id_stanowisko AND czy_wolne = 1 ) 
BEGIN
print ('Jest wolne stanowisko')
INSERT INTO Zamowienia(ilosc, id_stanowisko, id_kasa, data_zamowienia)
VALUES (@ilosc, @id_stanowisko, @kasa, getdate())
END
ELSE
print ('stanowisko jest zajęte')
END
GO
---|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
---PROCEDURA NR 6
------------------zakonczenie uslugi przy danym stanowisko (po oddaniu bili, rzutek czy pileczek) ------------------
CREATE PROCEDURE ZwolnijStanowisko (@nrStanowiska INT)
AS
IF (SELECT czy_wolne FROM StanowiskaUslug WHERE id_stanowisko = @nrStanowiska) = 0 
BEGIN
UPDATE StanowiskaUslug
SET czy_wolne = 1
WHERE id_stanowisko = @nrStanowiska
END
ELSE
PRINT 'Stanowisko jest wolne!!!'  ---Przy probie wykonanie tego na wolnym stanowisku wyskakuje komunikat ---
---przyklad---
EXEC ZwolnijStanowisko 3
SELECT * FROM StanowiskaUslug
---|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
---PROCEDUR NR 7
------------------ procedura pozwala szybko zatrudnić pracownika------------------
CREATE PROC zatrudnienie_pracownika
@imie varchar(20),
@nazwisko varchar(20),
@ulica varchar(40),
@nr_domu int,
@misato varchar(30),
@wojewodztwo varchar(30),
@kod_pocztowy int,
@obywatelstwo varchar(20),
@id_stanowisko INT,
@data_zatrudnienia date
AS
IF @id_stanowisko = 11
PRINT 'Nie mozna dodac szefa'
ELSE
INSERT INTO Pracownicy VALUES
(@imie, @nazwisko, @ulica, @nr_domu, @misato,
@wojewodztwo, @kod_pocztowy, @obywatelstwo, @id_stanowisko, @data_zatrudnienia)
go
---|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
---PROCEDURA NR 8
------------------Procedura doda artyste do bazy danych a nastepnie zamieni wybranego artyste na wybranym koncercie------------------

CREATE PROCEDURE ZmienArtyste (@nazwa VARCHAR(20),@kontakt INT, @profesja VARCHAR(20), @placa MONEY, @id_impreza INT, @id_artysta INT)
AS
INSERT INTO Artysci VALUES (@nazwa,@kontakt,@profesja,@placa)
UPDATE Impreza_artysci
SET id_artysta = (SELECT TOP 1 id_artysta FROM Artysci ORDER BY id_artysta DESC)
WHERE id_impreza = @id_impreza AND id_artysta = @id_artysta
--przyklad--
EXEC ZmienArtyste Marianek,664855555,Piosenkarz,3000,2,4
SELECT * FROM Artysci JOIN Impreza_artysci ON Artysci.id_artysta=Impreza_artysci.id_artysta
---|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
---PROCEDUR NR 9
------------------zwolnienie PRACOWNIKA------------------
CREATE PROC zwolnij_pracownika
@id_pracownik INT
AS
IF EXISTS (SELECT id_pracownik FROM Pracownicy WHERE id_pracownik = @id_pracownik)
DELETE Pracownicy
WHERE id_pracownik = @id_pracownik
ELSE
PRINT('Nie ma takiego pracownika')
GO
----------------
-----PROCEDURA NR 10
------------------Procedura zwiekszajaca o podany procent wynagrodzenie danego stanowiska ------------------
CREATE PROCEDURE zwieksz_zarobki (@procent FLOAT,@id_stanowisko INT)
AS
UPDATE StanowiskaPracy
SET stawka_godzinowa = stawka_godzinowa + (stawka_godzinowa * @procent)/100
WHERE id_stanowisko = @id_stanowisko
----Przyklad-----
EXEC zwieksz_zarobki 20,11
---|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
---PROCEDURA NR 11
------------------Procedura ta doda pracownika o najmniejszej ilosci godzin w danym miesiacu (podac nalezy dzien wyplaty)---------------
------------------do nastepnej imprezy (jesli go nie ma i takze impreza jest juz w bazie danych------------------
CREATE PROCEDURE DodajPracownika (@data_wyplaty DATE)
AS
IF (SELECT TOP 1 data_imprezy FROM Impreza Order by id_impreza DESC ) > GETDATE()
BEGIN
DECLARE @id_pracownik INT
SET @id_pracownik = (SELECT TOP 1 id_pracownik FROM Wyplata WHERE data_wyplaty = @data_wyplaty ORDER BY ilosc_godzin )
DECLARE @id_impreza INT
SET @id_impreza = (SELECT TOP 1 id_impreza FROM Impreza ORDER BY id_impreza DESC)
IF NOT EXISTS (SELECT id_pracownik FROM Impreza_pracownicy WHERE id_pracownik = @id_pracownik AND id_impreza = @id_impreza)
INSERT INTO Impreza_pracownicy VALUES (@id_impreza,@id_pracownik)
ELSE
PRINT 'Pracownik jest juz na imprezie'
END
ELSE
PRINT 'Nie ma nastepnej imprezy w bazie'
---przyklad--
EXEC DodajPracownika '2018-06-01'
