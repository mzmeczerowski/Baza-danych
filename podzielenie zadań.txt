TRIGGERS (10):
1) stan kasy(ilosc pieniedzy w kasie);
2) stan magazynu(stan magazynu - ilosc * zamuwienie);
3) informacja gdy ilość towaru <= 30)
4) stanowiska(czy wolne)
5) CZY MOŻE BYĆ --- Po anulowaniu zamowienia, powrot do stanu kasy i powrót do stanu magazynu. (Może być Marceliusz??)
6)
7)
8)
9)
10)stan kasy;

FUNCTIONS (10):
1) ilość produktu w magazynie - stan(produkt);
2) wyswietl wolne stanowaiska danej usługi - czy_wolne_stanowisko(id_usługa) @bool;
3) wypłaty_pracowników(data_wypłaty);
4) pracownicy zarabiajacy wiecej niż(x);
5) pracownicy_na_imprezie(impreza) @pracownicy;
6) ilośc_zamuwien_produktu_w_danym_dniu(data, id_produktu) @table
7) wypisz wszystkie produkty od danego dostawcy (dostawca) @produkty
8) wypsanie pracownikow,mmajcy kiedykowliek premie(id_premia)
9) 
10)FUnkcja wypisujaca dane pracownikow bedacych na imprezach danego artysty (@id_artysta)
11)
12)Funkcja wypisujaca na ilu imprezach byl artysta

VIEWS (10):
1) 
2)
3)
4)
5)
6)
7)
8)
9)
10)

PROCEDURES (10):
1)sprzedarz towaru "kasa" (@jaki towar, @ilość, getdate());
2)uzupełnienie magazynu (@towar, @ilość);
3)danie_premii(id_pracownik, id_premia);
4)dodanie urlopu(pracownik, data_rozpoczecia, data zakonczenia)
m:5)sprzedarz usługi "kasa" (id_stanowisko, getdate())- warunek jesli zajete to błąd
6)Zwalnianie stanowiska po opuszczeniu przez graczy stanowiska usług (id_stanowisko) - warunek jesli wolne to bląd
7)
8)Zamiana artystów na imprezie (Artysta zrezygnował, trzeba szybko wziac kogoś innego) (Doda artyste do bazy i zamieni) 
9)
10)Procedura ta doda pracownika o najmniejszej ilosci godzin w danym miesiacu (podac nalezy dzien wyplaty) do nastepnej imprezy (jesli go nie ma i takze impreza jest juz w bazie danych
